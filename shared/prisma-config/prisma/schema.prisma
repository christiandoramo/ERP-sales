generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  // binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement())

  name String @unique @db.VarChar(100) // até 100

  description String? @db.VarChar(300)

  price Decimal @db.Money // deve ser aceito em notação brasileira e internacional

  stock Int // de 0 a 999.999

  createdAt DateTime @default(now()) @map("created_at")

  updatedAt DateTime @updatedAt @map("updated_at")

  deletedAt DateTime? @map("deleted_at")

  Applications     ProductCouponApplication[]
  PercentDiscounts ProductPercentDiscount[]

  @@map("products")
}

enum COUPON_TYPE {
  percent @map("percent")
  fixed   @map("fixed")
}

model Coupon {
  id Int @id @default(autoincrement())

  code String @unique @db.VarChar(20) //4 a 20 chars

  type COUPON_TYPE // percentual ou valor fixo

  value Decimal

  oneShot Boolean @map("one_shot") // apenas 1 uso habilitado ou não

  maxUses Int @default(1) @map("max_uses")

  usesCount Int @default(0) @map("uses_count") // numero de vezes usado

  validFrom DateTime @map("valid_from")

  validUntil DateTime @map("valid_until") // maior q validUntil e no máximo de 5 anos

  createdAt DateTime @default(now()) @map("created_at")

  updatedAt DateTime @updatedAt @map("updated_at")

  deletedAt DateTime? @map("deleted_at")

  Applications ProductCouponApplication[]

  @@map("coupons")
}

model ProductCouponApplication {
  id Int @id @default(autoincrement())

  productId Int @map("product_id")

  couponId Int @map("coupon_id")

  appliedAt DateTime @default(now()) @map("applied_at")

  removedAt DateTime? @map("removed_at")

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  coupon  Coupon  @relation(fields: [couponId], references: [id], onDelete: Cascade)

  @@map("product_coupon_applications")
}

model ProductPercentDiscount {
  id        Int       @id @default(autoincrement())
  productId Int       @map("product_id")
  value     Int // percentual inteiro entre 1 e 80
  appliedAt DateTime  @default(now()) @map("applied_at")
  removedAt DateTime? @map("removed_at")

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_percent_discounts")
}
